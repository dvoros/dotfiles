# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
]
 
start-at-login = true
 
# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
# DIFF: This is disabled in the model configuration. I did not face any problem with it.
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true
 
# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature

accordion-padding = 0

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodness#disable-hide-app
automatically-unhide-macos-hidden-apps = true

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]

preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 0
inner.vertical =   0
outer.left =       0
outer.bottom =     0
outer.top =        0
outer.right =      0
 
# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# Spawn a terminal with super + space
ctrl-enter = '''exec-and-forget osascript -e '
on is_running(appName)
                tell application "System Events" to (name of processes) contains appName
end is_running
 
if not is_running("kitty") then
                tell application "kitty" to activate
else
                tell application "System Events" to tell process "kitty"
                                click menu item "New OS Window" of menu 1 of menu bar item "Shell" of menu bar 1
                end tell
end if'
'''

# Change focus to window left/down/up/right
ctrl-left = 'focus --boundaries-action wrap-around-the-workspace left'
ctrl-down = 'focus --boundaries-action wrap-around-the-workspace down'
ctrl-up = 'focus --boundaries-action wrap-around-the-workspace up'
ctrl-right = 'focus --boundaries-action wrap-around-the-workspace right'

# Move windows left/down/up/right within the same workspace
ctrl-shift-left = 'move left'
ctrl-shift-down = 'move down'
ctrl-shift-up = 'move up'
ctrl-shift-right = 'move right'

# If more than two monitors are used some experiment is needed
# See https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
ctrl-m = 'move-workspace-to-monitor --wrap-around next'

# Super + f sets fullscreen
ctrl-f = 'fullscreen'

ctrl-s = 'layout v_accordion' # 'layout stacking' in i3
ctrl-w = 'layout h_accordion' # 'layout tabbed' in i3
ctrl-e = 'layout tiles horizontal vertical' # 'layout toggle split' in i3

ctrl-shift-space = 'layout floating tiling' # 'floating toggle' in i3

ctrl-shift-q = 'close'

# Not supported, because this command is redundant in AeroSpace mental model.
# See: https://nikitabobko.github.io/AeroSpace/guide#floating-windows
#alt-space = 'focus toggle_tiling_floating'

 

# `focus parent`/`focus child` are not yet supported, and it's not clear whether they
# should be supported at all https://github.com/nikitabobko/AeroSpace/issues/5
# alt-a = 'focus parent'

ctrl-1 = 'workspace 1'
ctrl-2 = 'workspace 2'
ctrl-3 = 'workspace 3'
ctrl-4 = 'workspace 4'
ctrl-5 = 'workspace 5'
ctrl-6 = 'workspace 6'
ctrl-7 = 'workspace 7'
ctrl-8 = 'workspace 8'
ctrl-9 = 'workspace 9'
ctrl-0 = 'workspace 10'

ctrl-shift-1 = 'move-node-to-workspace 1'
ctrl-shift-2 = 'move-node-to-workspace 2'
ctrl-shift-3 = 'move-node-to-workspace 3'
ctrl-shift-4 = 'move-node-to-workspace 4'
ctrl-shift-5 = 'move-node-to-workspace 5'
ctrl-shift-6 = 'move-node-to-workspace 6'
ctrl-shift-7 = 'move-node-to-workspace 7'
ctrl-shift-8 = 'move-node-to-workspace 8'
ctrl-shift-9 = 'move-node-to-workspace 9'
ctrl-shift-0 = 'move-node-to-workspace 10'

ctrl-shift-c = 'reload-config'

ctrl-r = 'mode resize'

[mode.resize.binding]
ctrl-left = 'resize width -50'
ctrl-up = 'resize height +50'
ctrl-down = 'resize height -50'
ctrl-right = 'resize width +50'
enter = 'mode main'
esc = 'mode main'
